(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{229:function(e,_,v){"use strict";v.r(_);var t=v(0),r=Object(t.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"tree"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tree"}},[e._v("#")]),e._v(" tree")]),e._v(" "),v("p",[e._v("Mac下的 tree 命令 输出目录树层结构")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("mac 下使用 brew包管理工具安装 tree")]),e._v(" "),v("p",[v("code",[e._v("brew install tree")])])]),e._v(" "),v("li",[v("p",[e._v("安装成功后，直接在终端使用，使用 --help 查看帮助信息")]),e._v(" "),v("p",[v("code",[e._v("tree --help")])])]),e._v(" "),v("li",[v("p",[e._v("输出你的树层目录结构")]),e._v(" "),v("p",[e._v("cd 目标文件夹路径\n然后键入tree，会将该层级下所有文件都遍历了输出，不管层级多深")])]),e._v(" "),v("li",[v("p",[e._v("常用技巧")]),e._v(" "),v("p",[e._v("1.我们可以在目录遍历时使用 -L 参数指定遍历层级")])]),e._v(" "),v("li",[v("p",[e._v("输出你的树层目录结构")]),e._v(" "),v("p",[e._v("cd 目标文件夹路径\n然后键入tree，会将该层级下所有文件都遍历了输出，不管层级多深")])]),e._v(" "),v("li",[v("p",[e._v("常用技巧")]),e._v(" "),v("p",[e._v("1.我们可以在目录遍历时使用 -L 参数指定遍历层级")]),e._v(" "),v("p",[v("code",[e._v("tree -L 2")])]),e._v(" "),v("p",[e._v("2.如果你想把一个目录的结构树导出到文件 Readme.md ,可以这样操作")]),e._v(" "),v("p",[v("code",[e._v("tree -L 2 >README.md //然后我们看下当前目录下的 README.md 文件")])]),e._v(" "),v("p",[e._v("3.只显示文件夹")]),e._v(" "),v("p",[v("code",[e._v("tree -d")])]),e._v(" "),v("p",[e._v("4.显示项目的层级，n表示层级数。例：显示项目三层结构，")]),e._v(" "),v("p",[v("code",[e._v("tree -l 3；")])]),e._v(" "),v("p",[v("code",[e._v("tree -L n")])]),e._v(" "),v("p",[e._v("5.tree -I pattern 用于过滤不想要显示的文件或者文件夹。比如要过滤项目中的node_modules文件夹；")]),e._v(" "),v("p",[v("code",[e._v("tree -I “node_modules”")])])])])])}],!1,null,null,null);_.default=r.exports}}]);